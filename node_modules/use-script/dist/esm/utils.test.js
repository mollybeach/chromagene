import { __awaiter, __generator } from "tslib";
import { loadScript, setTestLoadMode } from './utils';
describe('Test util functions', function () {
    it('Appends script tag', function () { return __awaiter(void 0, void 0, void 0, function () {
        var testScript, result, tag;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setTestLoadMode(function () { return Promise.resolve(); });
                    testScript = '//cdn.bootcss.com/jquery/2.2.1/jquery.min.js';
                    return [4 /*yield*/, loadScript({ src: testScript })];
                case 1:
                    result = _a.sent();
                    tag = document.querySelector("script[src='" + testScript + "']");
                    // assert
                    expect(result.success).toBe(true);
                    expect(result.script).toEqual(testScript);
                    expect(tag).toBeDefined();
                    expect(tag).toEqual(result.element);
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=utils.test.js.map