import { __rest } from "tslib";
var testLoadFn;
export var setTestLoadMode = function (load) {
    if (process.env.NODE_ENV !== 'production') {
        testLoadFn = load;
    }
};
export function loadScript(_a) {
    var src = _a.src, attr = __rest(_a, ["src"]);
    if (process.env.NODE_ENV !== 'production' && testLoadFn) {
        var script_1 = document.createElement('script');
        script_1.src = src;
        Object.keys(attr).forEach(function (key) { return (script_1[key] = attr[key]); });
        document.body.appendChild(script_1);
        return testLoadFn()
            .then(function () { return ({
            success: true,
            element: script_1,
            script: src,
            error: null,
        }); })
            .catch(function () { return ({
            success: false,
            element: script_1,
            script: src,
            error: new ErrorEvent('test'),
        }); });
    }
    return new Promise(function (resolve) {
        var script = document.createElement('script');
        script.src = src;
        Object.keys(attr).forEach(function (key) { return (script[key] = attr[key]); });
        script.addEventListener('load', function () {
            return resolve({
                element: script,
                script: src,
                success: true,
                error: null,
            });
        });
        script.addEventListener('error', function (e) {
            return resolve({
                element: script,
                script: src,
                success: false,
                error: e,
            });
        });
        document.body.appendChild(script);
    });
}
export function getScriptTag(script) {
    if (typeof document === 'undefined') {
        return;
    }
    return document.querySelector("script[src='" + script + "']");
}
export function removeFailedScript(script) {
    var node = document.querySelector("script[src='" + script + "']");
    if (node && node.parentNode) {
        node.parentNode.removeChild(node);
    }
}
//# sourceMappingURL=utils.js.map